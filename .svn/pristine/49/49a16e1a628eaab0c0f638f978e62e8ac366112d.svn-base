<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<http use-expressions="true">
		<intercept-url pattern="/root**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/root/**" access="hasRole('ROLE_ADMIN')" />

		<intercept-url pattern="/manager**" access="hasRole('ROLE_MANAGER')" />
		<intercept-url pattern="/manager/**" access="hasRole('ROLE_MANAGER')" />

		<intercept-url pattern="/course**" access="hasRole('ROLE_STUDENT')" />
		<intercept-url pattern="/course/**" access="hasRole('ROLE_STUDENT')" />

		<intercept-url pattern="/users**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_USER')" />

		<form-login login-page="/user/login" />
		<logout logout-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>
	
			<!-- <password-encoder hash="bcrypt" /> -->
			
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select users.login, roles.name from users join roles on users.role = roles.id
											   where users.login = ?"
				users-by-username-query="select login,password,active from users where login = ?" />

			<user-service>
				<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
				<user name="user" password="user" authorities="ROLE_USER" />
				<user name="manager" password="manager" authorities="ROLE_USER, ROLE_MANAGER" />
				<user name="student" password="student" authorities="ROLE_USER, ROLE_STUDENT" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
</beans:beans>