package com.ita.softserveinc.achiever.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ita.softserveinc.achiever.entity.Subtopic;
import com.ita.softserveinc.achiever.entity.Topic;
import com.ita.softserveinc.achiever.service.ISubtopicService;
import com.ita.softserveinc.achiever.service.ITopicService;

/**
 * @author Taras Hrytsko
 *
 */
@Controller
public class SubtopicController {

	@Autowired
	private ISubtopicService subtopicService;

	@Autowired
	private ITopicService topicService;

	@Autowired
	private TopicController topicController;

	/**
	 * @param map
	 * @return subtopics
	 */
	@RequestMapping("/subtopics")
	public String listSubtopics(Map<String, Object> map) {
		map.put("subtopic", new Subtopic());
		map.put("subtopicList", subtopicService.findAll());
		return "subtopic";
	}

	/**
	 * @param map
	 * @return newsubtopic
	 */
	@RequestMapping("/newsubtopic")
	public String newSubtopic(Map<String, Object> map) {
		map.put("subtopic", new Subtopic());
		map.put("topicList", topicService.findAll());
		return "newsubtopic";
	}

	/**
	 * @param subtopic
	 * @param topic
	 * @param result
	 * @return subtopics
	 */
	@RequestMapping(value = "/addSubtopic", method = RequestMethod.POST)
	public String addSubtopic(@ModelAttribute("subtopic") Subtopic subtopic,
			@ModelAttribute("topic") Topic topic, BindingResult result) {
		topic = topicService.findByName(topic.getTopicName());
		try {
			subtopic.setTopic(topicService.findByName(topic.getTopicName()));
			subtopicService.create(subtopic);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/subtopics";
	}

	/**
	 * @param id
	 * @return homepage
	 */
	@RequestMapping("/subtopic/settopic/{subtopicId}")
	public String setTopic(@PathVariable("subtopicId") Long id) {
		return "settopic";
	}

	/**
	 * @param id
	 * @return homepage
	 */
	@RequestMapping("/subtopic/edit/{subtopicId}")
	public String editSubtopic(@PathVariable("subtopicId") Long id) {
		Subtopic subtopic = subtopicService.findById(id);
		try {
			subtopicService.update(subtopic);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/subtopics";
	}

	/**
	 * @param id
	 * @return homepage
	 */
	@RequestMapping("/subtopic/delete/{subtopicId}")
	public String deleteSubtopic(@PathVariable("subtopicId") Long id) {
		Subtopic subtopic = subtopicService.findById(id);
		subtopicService.delete(subtopic);
		return "redirect:/subtopics";
	}
}
